#!/bin/zsh
setopt EXTENDED_GLOB

# set colours
autoload colors
if [[ "$terminfo[colors]" -gt 8 ]]; then
  colors
fi
for COLOR in RED GREEN YELLOW BLUE MAGENTA CYAN BLACK WHITE; do
  eval $COLOR='$fg_no_bold[${(L)COLOR}]'
  eval BOLD_$COLOR='$fg_bold[${(L)COLOR}]'
done
eval RESET='$reset_color'

# define cask application folder
export HOMEBREW_CASK_OPTS=--appdir=/Applications

# easy brew install function
function brewinstall() {
  brew install "${@}" 2> /dev/null
}

# easy cask install function
function caskinstall() {
  brew cask install "${@}" 2> /dev/null
}

# easy ruby package install function
function geminstall() {
  if ! type "${@}" > /dev/null; then
    gem install "${@}"
  fi
}

# easy global node package install function
function npminstall() {
  if ! type "${@}" > /dev/null; then
    npm install "${@}" -g --quiet
  fi
}

# easy global python package install function
function pipinstall() {
  if ! type "${@}" > /dev/null; then
    pip install --upgrade "${@}"
  fi
}

# easy brew tap function
function brewtap() {
  if ! brew tap | grep "${@}" > /dev/null; then
    brew tap "${@}"
  fi
}

# force
FORCE=0;

if [ "$1" = "-f" ]; then
  FORCE=1;
fi

printf "\n${MAGENTA}###############\n"
printf "#     MY      #\n"
printf "###############${RESET}\n"

# install brew if needed
if ! type "brew" > /dev/null; then
  echo "\n${GREEN}❯ Installing homebrew...${RESET}"
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
fi

# install zsh via brew if needed
if ! type "/usr/local/bin/zsh" > /dev/null; then
  echo "\n${GREEN}❯ Installing zsh...${RESET}"
  brewinstall zsh
  echo "/usr/local/bin/zsh" | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/zsh $USER
  # sudo mv /etc/{zshenv,zprofile}
fi

# install bash via brew if needed
if ! type "/usr/local/bin/bash" > /dev/null; then
  echo "\n${GREEN}❯ Installing bash...${RESET}"
  brewinstall bash
  echo "/usr/local/bin/bash" | sudo tee -a /etc/shells
fi

# update/upgrade brew
echo "\n${GREEN}❯ Updating brew...${RESET}"
brew update && brew upgrade

# add some brew repo
echo "\n${GREEN}❯ Tap some brew repos if needed...${RESET}"
brewtap phinze/cask
brewtap homebrew/dupes
brewtap caskroom/versions
brewtap josegonzalez/php

# install brew packages
echo "\n${GREEN}❯ Installing brew packages...${RESET}"

brewinstall homebrew/dupes/make
brewinstall dnsmasq
brewinstall ssh-copy-id
brewinstall htop-osx
brewinstall homebrew/dupes/rsync

brewinstall git
brewinstall ghi
brewinstall wget
brewinstall curl
brewinstall pv
brewinstall md5sha1sum
brewinstall tree
brewinstall mtr
brewinstall ncdu
brewinstall iftop
brewinstall iotop
brewinstall lsof
brewinstall pwgen
brewinstall mdr
brewinstall vim

brewinstall ruby
brewinstall python
brewinstall node
brewinstall php55

brewinstall brew-cask

# install apps
echo "\n${GREEN}❯ Installing apps...${RESET}"
caskinstall dropbox
if [ ! -d "$HOME/Dropbox" ]; then
  read -q "REPLY?Configure now your dropbox and press [Enter] when you've finished..."
fi
caskinstall google-chrome-canary
caskinstall firefox-nightly
caskinstall vlc
caskinstall alfred
caskinstall iterm2-beta
caskinstall limechat
caskinstall f-lux
caskinstall appcleaner
caskinstall keepassx2
caskinstall spectacle
caskinstall grandperspective
caskinstall imagealpha
caskinstall imageoptim
caskinstall steam
caskinstall spotify
caskinstall tinygrab
caskinstall sublime-text3
if ! type "subl" > /dev/null; then
  ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
fi
caskinstall xquartz
caskinstall bittorrent-sync
caskinstall flash
caskinstall qlcolorcode
caskinstall qlstephen
caskinstall qlmarkdown
caskinstall quicklook-json
caskinstall quicklook-csv
caskinstall qlprettypatch
caskinstall betterzipql
caskinstall webp-quicklook
caskinstall suspicious-package
caskinstall ios7-screensaver
caskinstall recordit
caskinstall xscope

# handle zprezto
if [ -d "$HOME/.zprezto" ]; then
  echo "\n${GREEN}❯ Updating Prezto...${RESET}"
  git --git-dir="$HOME/.zprezto/.git" --work-tree="$HOME/.zprezto/" pull
else
  echo "\n${GREEN}❯ Installing Prezto...${RESET}"
  git clone --recursive https://github.com/sorin-ionescu/prezto.git "$HOME/.zprezto"
  echo "${GREEN}❯ Copying zprezto files...${RESET}"
  for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
    cp -ivn "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
  done
fi

# handle themes
if [ -d "$HOME/my/modules/themes" ]; then
  echo "\n${GREEN}❯ Updating themes...${RESET}"
  git --git-dir="$HOME/my/modules/themes/.git" --work-tree="$HOME/my/modules/themes/" pull
else
  echo "\n${GREEN}❯ Installing themes...${RESET}"
  git clone --recursive https://github.com/kud/themes.git "$HOME/my/modules/themes"
  mkdir -p ~/Library/Application\ Support/LimeChat/Themes
  ln -si ~/my/modules/themes/limechat/kud.css ~/Library/Application\ Support/LimeChat/Themes/kud.css
  ln -si ~/my/modules/themes/limechat/kud.yaml ~/Library/Application\ Support/LimeChat/Themes/kud.yaml
fi

# update ruby packages
echo "\n${GREEN}❯ Updating Gems...${RESET}"
gem update --system && gem update

# install ruby packages
echo "\n${GREEN}❯ Installing global ruby packages...${RESET}"
geminstall boom

# install ruby packages
echo "\n${GREEN}❯ Installing global python packages...${RESET}"
pipinstall asciinema

# update node packages
echo "\n${GREEN}❯ Updating global node modules...${RESET}"
# npm update -g --quiet
npm update -g --silent

# install node packages
echo "\n${GREEN}❯ Installing global node packages...${RESET}"
npminstall bower
npminstall tldr
npminstall nodemon
npminstall jake
npminstall bloody-testserver

# warn about apps coming from app store
echo "\n${GREEN}❯ Don't forget to install via App Store${RESET}"

if [ ! -d "/Applications/Twitter.app/" ]; then
  echo "- Twitter for Mac"
fi
if [ ! -d "/Applications/Xcode.app/" ]; then
  echo "- XCode"
fi
echo "- Network Link Conditioner"

# hack to make doctor not crying about `make`
if type "/usr/local/bin/make" > /dev/null; then
  brew unlink make > /dev/null
fi

# if [ $FORCE -eq 0 ]; then
echo "\n${GREEN}❯ Doctor is checking...${RESET}"
# brew doctor || exit 1
brew doctor
# fi

# come back `make`!
brew link make --force > /dev/null

# done!
echo "\n${BLUE}And... we're done!${RESET}"

# restart the shell
exec $SHELL
