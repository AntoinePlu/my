#!/bin/zsh
setopt EXTENDED_GLOB

# set colours
autoload colors
if [[ "$terminfo[colors]" -gt 8 ]]; then
    colors
fi
for COLOR in RED GREEN YELLOW BLUE MAGENTA CYAN BLACK WHITE; do
    eval $COLOR='$fg_no_bold[${(L)COLOR}]'
    eval BOLD_$COLOR='$fg_bold[${(L)COLOR}]'
done
eval RESET='$reset_color'

# define cask application folder
export HOMEBREW_CASK_OPTS=--appdir=/Applications

# easy brew install function
function brewinstall() {
  brew install "${@}" 2> /dev/null
}

# easy cask install function
function caskinstall() {
  brew cask install "${@}" 2> /dev/null
}

# easy brew tap function
function brewtap() {
  if ! brew tap | grep "${@}" > /dev/null; then
    brew tap "${@}"
  fi
}

# force
FORCE=0;

if [ "$1" = "-f" ]; then
  FORCE=1;
fi

# kikoolol print
printf "\n༼ ᕤ﻿◕◡◕ ༽ᕤ﻿ \`my\` ༼ ᕤ﻿◕◡◕ ༽ᕤ\n"

# install brew if needed
if ! type "brew" > /dev/null; then
  echo "\n${GREEN}=> Installing homebrew...${RESET}"
  ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
fi

# install zsh via brew if needed
if ! type "/usr/local/bin/zsh" > /dev/null; then
  echo "\n${GREEN}=> Installing zsh...${RESET}"
  brewinstall zsh
  echo "/usr/local/bin/zsh" | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/zsh $USER
  sudo mv /etc/{zshenv,zprofile}
fi

# install bash via brew if needed
if ! type "/usr/local/bin/bash" > /dev/null; then
  echo "\n${GREEN}=> Installing bash...${RESET}"
  brewinstall bash
  echo "/usr/local/bin/bash" | sudo tee -a /etc/shells
fi

# update/upgrade brew
echo "\n${GREEN}=> Updating brew...${RESET}"
brew update && brew upgrade

# add some brew repo
echo "\n${GREEN}=> Tap some brew repos if needed...${RESET}"
brewtap phinze/cask
brewtap homebrew/dupes
brewtap caskroom/versions

# install brew packages
echo "\n${GREEN}=> Installing brew packages...${RESET}"

brewinstall homebrew/dupes/make
brewinstall dnsmasq
brewinstall ssh-copy-id
brewinstall htop-osx
brewinstall homebrew/dupes/rsync

brewinstall git
brewinstall wget
brewinstall curl
brewinstall pv
brewinstall md5sha1sum
brewinstall tree
brewinstall mtr

brewinstall ruby
brewinstall python
brewinstall node

brewinstall brew-cask

# install apps
echo "\n${GREEN}=> Installing apps...${RESET}"
caskinstall google-chrome-canary
caskinstall firefox-aurora
caskinstall dropbox
caskinstall vlc
caskinstall alfred
caskinstall iterm2-beta
caskinstall lime-chat
caskinstall f-lux
caskinstall app-cleaner
caskinstall keepass-x-2
caskinstall spectacle
caskinstall grand-perspective
caskinstall imagealpha
caskinstall imageoptim
caskinstall mou
caskinstall steam
caskinstall spotify
caskinstall tinygrab
caskinstall sublime-text-3
if ! type "subl" > /dev/null; then
  ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
fi
caskinstall xquartz

# handle zprezto
if [ -d "$HOME/.zprezto" ]; then
  echo "\n${GREEN}=> Updating Prezto...${RESET}"
  git --git-dir="$HOME/.zprezto/.git" --work-tree="$HOME/.zprezto/" pull
else
  echo "\n${GREEN}=> Installing Prezto...${RESET}"
  git clone --recursive https://github.com/sorin-ionescu/prezto.git "$HOME/.zprezto"
  echo "${GREEN}=> Copying zprezto files...${RESET}"
  for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
    cp -ivn "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
  done
fi

# handle themes
if [ -d "$HOME/my/modules/themes" ]; then
  echo "\n${GREEN}=> Updating themes...${RESET}"
  git --git-dir="$HOME/my/modules/themes/.git" --work-tree="$HOME/my/modules/themes/" pull
else
  echo "\n${GREEN}=> Installing themes...${RESET}"
  git clone --recursive https://github.com/kud/themes.git "$HOME/my/modules/themes"
  ln -si ~/my/modules/themes/limechat/kud.css ~/Library/Application\ Support/LimeChat/Themes/kud.css
  ln -si ~/my/modules/themes/limechat/kud.yaml ~/Library/Application\ Support/LimeChat/Themes/kud.yaml
fi

# update ruby packages
echo "\n${GREEN}=> Updating Gems...${RESET}"
gem update --system && gem update

# update node packages
echo "\n${GREEN}=> Updating global node modules...${RESET}"
npm update -g --quiet

# warn about apps coming from app store
echo "\n${GREEN}=> Don't forget to install via App Store${RESET}"

if [ ! -d "/Applications/Twitter.app/" ]; then
  echo "- Twitter for Mac"
fi
if [ ! -d "/Applications/Xcode.app/" ]; then
  echo "- XCode"
fi

# hack to make doctor not crying about make
if type "/usr/local/bin/make" > /dev/null; then
  brew unlink make > /dev/null
fi

# if [ $FORCE -eq 0 ]; then
echo "\n${GREEN}=> Doctor is checking...${RESET}"
# brew doctor || exit 1
brew doctor
# fi

# come back make!
brew link make --force > /dev/null

# done!
echo "\n${BLUE}And... we're done!${RESET}"

# restart the shell
exec $SHELL
